export default {
  title: "Typescript with Vue 3",
  chapters: [
    {
      title: "Chapter 1",
      slug: "1-chapter-1",
      number: 1,
      lessons: [
        {
          title: "Introduction to TypeScript",
          slug: "1-lesson-1",
          number: 1,
          downloadUrl: "https://example.com/lesson-1",
          sourceUrl: "https://example.com/lesson-1",
          videoId: 123,
          text: "In Lesson 1, you will learn the basics of TypeScript and how it integrates with Vue 3. We will cover topics such as setting up a TypeScript project, type annotations, interfaces, and type inference. By the end of this lesson, you will have a solid understanding of TypeScript fundamentals in the context of Vue 3 development.",
        },
        {
          title: "Advanced TypeScript with Vue 3",
          slug: "1-lesson-2",
          number: 2,
          downloadUrl: "https://example.com/lesson-2",
          videoId: 456,
          text: "Lesson 2 dives deeper into TypeScript with Vue 3. We will explore advanced type annotations, generics, type unions and intersections, as well as type guards. Additionally, we will discuss how to leverage TypeScript with Vue 3 features like composition API and reactive properties. By the end of this lesson, you will have a strong grasp of TypeScript's advanced features and their application in Vue 3 development.",
        },
        {
          title: "Testing TypeScript with Vue 3",
          slug: "1-lesson-3",
          number: 3,
          downloadUrl: "https://example.com/lesson-3",
          sourceUrl: "https://example.com/lesson-1",
          videoId: 789,
          text: "Lesson 3 focuses on testing techniques for TypeScript-based Vue 3 applications. You will learn how to write unit tests using popular testing frameworks like Jest and Vue Test Utils. We will cover topics such as test setup, mocking dependencies, and asserting type safety. By the end of this lesson, you will be equipped with the knowledge to write comprehensive tests for your TypeScript-powered Vue 3 projects.",
        },
        {
          title: "Practical Examples and Best Practices",
          slug: "1-lesson-4",
          number: 4,
          downloadUrl: "https://example.com/lesson-4",
          videoId: 101112,
          text: "In the final lesson of Chapter 1, we will explore practical examples and best practices for TypeScript and Vue 3 integration. We will examine real-world scenarios and discuss how to leverage TypeScript to improve development productivity and code maintainability in Vue 3 projects. By the end of this lesson, you will have a solid understanding of TypeScript with Vue 3 and be ready to apply it in your own projects.",
        },
      ],
    },
    {
      title: "Chapter 2",
      slug: "2-chapter-2",
      number: 2,
      lessons: [
        {
          title: "Decorators and Mixins",
          slug: "2-lesson-1",
          number: 1,
          downloadUrl: "https://example.com/lesson-1",
          sourceUrl: "https://example.com/lesson-1",
          videoId: 131415,
          text: "Lesson 1 of Chapter 2 introduces advanced TypeScript features specifically tailored for Vue 3 development. We will cover topics such as decorators, mixins, class component syntax, and module augmentation. These powerful features allow you to enhance the capabilities of your Vue 3 components and create reusable, composable code. By the end of this lesson, you will be equipped with valuable techniques to level up your Vue 3 applications.",
        },
        {
          title: "Server-Side Rendering with TypeScript",
          slug: "2-lesson-2",
          number: 2,
          downloadUrl: "https://example.com/lesson-2",
          videoId: 161718,
          text: "Lesson 2 explores server-side rendering (SSR) with TypeScript in Vue 3. We will discuss the benefits of SSR, set up a basic SSR project using Vue 3 and TypeScript, and cover advanced topics like data pre-fetching, server hydration, and code-splitting. By the end of this lesson, you will be able to leverage SSR with TypeScript to build high-performance Vue 3 applications.",
        },
        {
          title: "TypeScript and Vue Router",
          slug: "2-lesson-3",
          number: 3,
          downloadUrl: "https://example.com/lesson-3",
          sourceUrl: "https://example.com/lesson-1",
          videoId: 192021,
          text: "Lesson 3 focuses on integrating TypeScript with Vue Router. You will learn how to define strongly typed routes, guard navigation with type safety, and handle route parameters and query parameters in a type-safe manner. Additionally, we will explore advanced routing scenarios and discuss best practices for TypeScript-powered Vue 3 applications with Vue Router.",
        },
      ],
    },
    {
      title: "Chapter 3",
      slug: "3-chapter-3",
      number: 3,
      lessons: [
        {
          title: "Type-Safe Vuex Store",
          slug: "3-lesson-1",
          number: 1,
          downloadUrl: "https://example.com/lesson-1",
          sourceUrl: "https://example.com/lesson-1",
          videoId: 222324,
          text: "Lesson 1 of Chapter 3 delves into creating a type-safe Vuex store with TypeScript and Vue 3. We will explore techniques for defining strongly typed state, mutations, actions, and getters using the power of TypeScript. By leveraging the type system, we can catch errors at compile-time and ensure the integrity of our Vuex store. By the end of this lesson, you will be able to build type-safe Vuex stores for your Vue 3 applications.",
        },
        {
          title: "TypeScript and Vue 3 Forms",
          slug: "3-lesson-2",
          number: 2,
          downloadUrl: "https://example.com/lesson-2",
          videoId: 252627,
          text: "Lesson 2 focuses on TypeScript and form handling in Vue 3. We will explore techniques for creating type-safe forms, validating form input, and handling form submissions. Additionally, we will discuss strategies for managing form state and integrating with popular form libraries. By the end of this lesson, you will have the knowledge to create robust, type-safe forms in your Vue 3 applications.",
        },
        {
          title: "Internationalization with TypeScript and Vue 3",
          slug: "3-lesson-3",
          number: 3,
          downloadUrl: "https://example.com/lesson-3",
          sourceUrl: "https://example.com/lesson-1",
          videoId: 282930,
          text: "Lesson 3 explores internationalization (i18n) in TypeScript-powered Vue 3 applications. We will cover techniques for handling multilingual content, localization, and date and number formatting. We will also discuss best practices for structuring i18n files and integrating with popular i18n libraries. By the end of this lesson, you will be able to internationalize your Vue 3 applications with TypeScript.",
        },
        {
          title: "Optimizing TypeScript with Vue 3",
          slug: "3-lesson-4",
          number: 4,
          downloadUrl: "https://example.com/lesson-4",
          videoId: 313233,
          text: "In the final lesson of Chapter 3, we will explore strategies for optimizing TypeScript-based Vue 3 applications. We will cover topics such as performance optimization, tree-shaking, lazy loading, and bundle analysis. Additionally, we will discuss techniques for reducing bundle size and improving runtime performance. By the end of this lesson, you will be equipped with optimization techniques to create highly performant Vue 3 applications with TypeScript.",
        },
      ],
    },
  ],
};
